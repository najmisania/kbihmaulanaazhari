<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pendaftaran extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pendaftaran_model');
    } 

    /*
     * Listing of pendaftaran
     */
    function index()
    {
        $data['pendaftaran'] = $this->Pendaftaran_model->get_all_pendaftaran();
        $data['status_kontak_values'] = array(
                                    '0'=>'Belum Dihubungi',
                                    '1'=>'Sudah Dihubungi',
                                );
        $data['content_name'] = "pendaftaran/index";
        $data['title_page'] = "Calon Peserta";
        $this->load->view('index',$data);
    }

    /*
     * Adding a new pendaftaran
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nama lengkap','Nama Lengkap','required');
		$this->form_validation->set_rules('alamat','Alamat','required');
		$this->form_validation->set_rules('tanggal_kontak','Tanggal Kontak','required');
		$this->form_validation->set_rules('email','Email','required|valid_email');
		$this->form_validation->set_rules('no_telepon','No Telepon','required');
		$this->form_validation->set_rules('produk_id','Produk Id','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'produk_id' => $this->input->post('produk_id'),
				'status_kontak' => $this->input->post('status_kontak'),
				'nama lengkap' => $this->input->post('nama lengkap'),
				'no_telepon' => $this->input->post('no_telepon'),
				'email' => $this->input->post('email'),
				'tanggal_kontak' => $this->input->post('tanggal_kontak'),
				'alamat' => $this->input->post('alamat'),
            );
            
            $pendaftaran_id = $this->Pendaftaran_model->add_pendaftaran($params);
            redirect('pendaftaran/index');
        }
        else
        {
			$this->load->model('Agenda_model');
			$data['all_agenda'] = $this->Agenda_model->get_all_agenda();
            
            $data['_view'] = 'pendaftaran/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a pendaftaran
     */
    function edit($nik)
    {   
        // check if the pendaftaran exists before trying to edit it
        $data['pendaftaran'] = $this->Pendaftaran_model->get_pendaftaran($nik);
        
        if(isset($data['pendaftaran']['nik']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nama lengkap','Nama Lengkap','required');
			$this->form_validation->set_rules('alamat','Alamat','required');
			$this->form_validation->set_rules('tanggal_kontak','Tanggal Kontak','required');
			$this->form_validation->set_rules('email','Email','required|valid_email');
			$this->form_validation->set_rules('no_telepon','No Telepon','required');
			$this->form_validation->set_rules('produk_id','Produk Id','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'produk_id' => $this->input->post('produk_id'),
					'status_kontak' => $this->input->post('status_kontak'),
					'nama lengkap' => $this->input->post('nama lengkap'),
					'no_telepon' => $this->input->post('no_telepon'),
					'email' => $this->input->post('email'),
					'tanggal_kontak' => $this->input->post('tanggal_kontak'),
					'alamat' => $this->input->post('alamat'),
                );

                $this->Pendaftaran_model->update_pendaftaran($nik,$params);            
                redirect('pendaftaran/index');
            }
            else
            {
				$this->load->model('Agenda_model');
				$data['all_agenda'] = $this->Agenda_model->get_all_agenda();

                $data['_view'] = 'pendaftaran/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pendaftaran you are trying to edit does not exist.');
    } 

    function setTerhubungi($nik)
    {
        $this->Pendaftaran_model->update_pendaftaran($nik, array('status_kontak' => '1'));

            redirect('pendaftaran/index');
    }
    
    /*
     * Deleting pendaftaran
     */
    function remove($nik)
    {
        $pendaftaran = $this->Pendaftaran_model->get_pendaftaran($nik);

        // check if the pendaftaran exists before trying to delete it
        if(isset($pendaftaran['nik']))
        {
            $this->Pendaftaran_model->delete_pendaftaran($nik);
            redirect('pendaftaran/index');
        }
        else
            show_error('The pendaftaran you are trying to delete does not exist.');
    }
    
}
